apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


group = "com.mintegral.detailroi"	// 所在组
version = getVersion()
def siteUrl = 'http://detailroi.mintegral.com' // 项目主页
def gitUrl = 'https://github.com/Mintegral-official/MintegralAdSDK-Android.git' // 项目的git地址
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
afterEvaluate {
    publishing {
        repositories {
            def Nexususername = properties.getProperty("Nexus.name")
            def Nexuspassword = properties.getProperty("Nexus.password")
            maven{
                name = "mtg_inner_oversea_release_repo"
                url="http://maven-android.mintegral.com/repository/alpha_detailroi_and_sdk_common/"
                // 仓库用户名密码
                credentials {
                    username = Nexususername
                    password = Nexuspassword
                }
            }
//            maven{
//                name = "mtg_inner_oversea_snapshot_repo"
//                url = "http://maven.inner.mobvista.com/repository/mbridge_android_sdk_for_oversea_in_test/"
//                // 仓库用户名密码
//                credentials {
//                    username = Nexususername
//                    password = Nexuspassword
//                }
//            }

        }
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.mintegral.detailroi'
                artifactId = project.name
                pom.withXml{
                    Node pomNode = asNode()
                    pomNode.dependencies.'*'.findAll() {

                    }
                }
                pom {
                    name = artifactId
                    url = siteUrl
                    licenses {
                        //证书说明
                        license {
                            name='The Apache Software License, Version 2.0' // 开源协议名称
                            url='http://www.apache.org/licenses/LICENSE-2.0.txt' // 协议地址
                        }
                    }
                    developers {
                        developer {
                            id='sarige'	// 账号
                            name='sarige'	// 名称
                            email='junjun.song@mintegral.com' // 邮箱地址
                        }
                    }
                    //软件配置管理
                    scm {
                        connection=gitUrl
                        developerConnection=gitUrl
                        url=siteUrl
                    }
                }
            }

        }
        }
    }


def getVersion(){
    def path = rootProject.project(":common").getProjectDir().absolutePath + '/src/main/java/com/mintegral/detailroi/common/base/SDKConfig.java'

    def version = "1.0.0"
    String readerString = path
    if (path) {
        new File(path).withReader('UTF-8') { reader ->
            reader.eachLine {
                //读取一行，如果发现有"VERSION"字符，说明是我们要修改的那一行。
                if (it.contains("SDK_VERSION")) {
                    //保存it到string，然后返回
                    readerString <<= it
                    String[] str = readerString.split("\"")
                    version =  str[1].split("\"")[0]
                    return version
                }
            }
            return version
        }
    }else{
        return version
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}


